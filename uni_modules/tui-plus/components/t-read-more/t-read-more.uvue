<template>
	<t-view main-class="dr">
		<t-view :main-class="contentStyles">
			<slot></slot>
		</t-view>
		<t-view :main-class="maskBoxStyles">
			<t-view v-show="expand" :main-class="`h-80px bit-#ffffff,rgba(255,255,255,0.3)`"></t-view>
		</t-view>
		<t-row :main-class="`fc ${extendsPadding} tvg ${shadowClass}`" @click="onExpand">
			<t-text v-bind="extendsAttrs" :effect="expand?'':'light'" main-class=""
				:text="expand?closeText:openText"></t-text>
			<t-icon v-bind="extendsAttrs" :effect="expand?'':'light'" main-class="ml-10"
				:name="expand?'arrow-down':'arrow-up'"></t-icon>
		</t-row>
	</t-view>
</template>

<script setup>
	/**
	 * ReadMore 加载更多
	 * @date 2025-05-31 12:06:13
	 * @author TanYuan
	 * @description 展开阅读更多组件用于在内容区域提供一种折叠和展开的功能，允许用户根据需要查看更多或更少的内容。它的功能亮点包括：可自定义展开和收起的提示文本，支持显示或隐藏展开/收起按钮，以及可选的阴影效果。使用场景包括：文章摘要、产品详情、用户评论等，需要在有限空间内展示可扩展内容的情况。
	 * @example /pagesA/basics/read-more/read-more
	 * @tutorial https://life.yundie.xyz/tui3.0/docs/component/t-read-more.html
	 * @example /pagesA/basics/read-more/read-more
	 * @property {String} size=[large|medium|small|mini] 组件尺寸(默认：l)
	 * @value large 大尺寸，按钮的尺寸较大，适用于需要强调操作或易于点击的区域。
	 * @value medium 中尺寸，按钮的尺寸适中，可能是默认尺寸，适用于大多数场景。
	 * @value small 小尺寸，按钮的尺寸较小，适用于空间有限或操作不是特别重要的区域。
	 * @value mini 迷你，按钮的尺寸最小，适用于紧凑布局或辅助操作。
	 * @property {String} type=[info|primary|error|warning|success] 组件类型(默认：p)
	 * @value info 信息提示场景，通常用于提供一般的通知信息，不涉及特别的重要性或紧急性。
	 * @value primary 正常使用场景，可能用于强调某些主要的操作或信息，比如主要的按钮或导航链接。
	 * @value error 错误提示场景，用于指示出现了错误或问题，需要用户的注意。
	 * @value warning 警告提示场景，用于提示用户关于潜在的问题或需要注意的事项。
	 * @value success 成功提示场景，用于指示一个操作或过程已经成功完成。
	 * @property {Boolean} disabled=[false|true] 组件是否禁用
	 * @property {Boolean} stop=[false|true] 是否阻止事件冒泡（Tui统一写法处理事件冒泡）(默认: false)
	 * @property {Boolean} hover=[false|true] 是否有点击效果(默认：true)
	 * @property {String} path 点击组件后跳转的页面路径，如果为空则响应点击事件，如果不为空则跳转页面不会响应单击事件。(默认: "")
	 * @property {String} mainClass 组件根节点的样式。(默认: "")
	 * @property {String} nativeClass 组件根节点原生样式。(默认: "")
	 * @property {String} effect=[normal|dark|light|plain] 组件显示主题(默认 "normal")
	 * @value normal 正常
	 * @value dark 深色
	 * @value light 浅色
	 * @value plain 镂空
	 * @property {String} closeText 关闭时的提示文字(默认：展开阅读全文)
	 * @property {String} openText 展开时的提示文字(默认：收起)
	 * @property {Boolean} shadow 是否显示阴影
	 * @value true 是
	 * @value false 否
	 * @property {String} shadowClass 阴影的样式
	 */
	import { CommonProps, useTuiThemes } from '../../common/props/index.uts';
	interface ViewProps extends CommonProps {
		closeText : string
		openText : string
		shadow : boolean
		shadowClass : string
	}
	const props = withDefaults(defineProps<ViewProps>(), {
		path: '',
		hover: false,
		type: '',
		disabled: false,
		stop: false,
		effect: '',
		size: '',
		mainClass: '',
		nativeClass: '',
		closeText: '展开阅读全文',
		openText: '收起',
		shadow: false,
		shadowClass: '',
	});
	const { extendsPadding, extendsAttrs } = useTuiThemes(props)
	const expand = ref<boolean>(true)
	const maskBoxStyles = computed(() : string => {
		return `${expand.value ? '' : 'da dlbr-0'}`
	})
	const contentStyles = computed(() : string => {
		return `w-100% ${expand.value ? 'da' : 'dr'}`
	})
	function onExpand() {
		if (!props.disabled) expand.value = !expand.value
	}
</script>